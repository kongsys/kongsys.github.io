<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dtrace on Kongsys&#39;s blog</title>
    <link>https://kongsys.github.io/tags/dtrace/</link>
    <description>Recent content in Dtrace on Kongsys&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Feb 2019 07:15:32 +0800</lastBuildDate>
    
	<atom:link href="https://kongsys.github.io/tags/dtrace/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DTrace</title>
      <link>https://kongsys.github.io/dtrcae/</link>
      <pubDate>Mon, 04 Feb 2019 07:15:32 +0800</pubDate>
      
      <guid>https://kongsys.github.io/dtrcae/</guid>
      <description>About DTrace Dtrace 是一个性能分析和问题定位工具，目前Solaris, Mac OS 和 FreeBSD 都有这个工具，还有 OracleLinux
Dtrace 提供一门语言 D , 用来写 DTrace 脚本或者 CLI ， D 很像 C 和 awk
下面是一个 DTrace 的文档链接，来自 Oracle 的
DTrace docs
Example trace.d syscall:freebad:write:entry /execname == &amp;quot;curl&amp;quot;/ { printf(&amp;quot;%d WRITE %d %s\n&amp;quot;, pid, arg2, stringof(copyin(arg1, arg2))); } syscall:freebsd:exit:entry /execname == &amp;quot;curl&amp;quot;/ { printf(&amp;quot;%d EXIT %d\n&amp;quot;, pid, arg0); }  解释下上面的文件内容
syscall:freebsd:write:entry 这是一个探测器的格式(Dtrace Probes) 探测器可以通过 dtrace -l 得到
格式含义是: provider:module:function:name</description>
    </item>
    
  </channel>
</rss>